{
  "name": "Prompting",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        272,
        -560
      ],
      "id": "7f67440e-9bda-41e1-b072-f2c517ef9ba4",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.prompt }}\n\n-- End of request.\nHere are the models:\n{{ $json.concatenated_model }}\n\nThe models are located here:\n\"http://vitruv.tools/methodologisttemplate/[modelname]\"\n\n{{ $('Set Parameters').item.json.Few_shot ? \"Here are some examples as guideline:\\n\" + $('Extract text from examples file').item.json.examples : \"\" }}\n\n\n{{ $('Set Parameters').item.json.Grammar ? \"Here is the grammar of the Language:\\n\" + $('Extract text from grammar').item.json.grammar : \"\"}}\n\n{{ $('Set Parameters').item.json.Helper_methods ? \"Here are helper methods you can use:\\n\" + $('Extract text from helper methods').item.json.helper_methods : \"\"}}",
        "messages": {
          "messageValues": [
            {
              "message": "You are an expert developer for the **Reactions Language**\n(model-transformation DSL).  \nYour job is to translate the user’s natural-language specification into\na complete, syntactically valid .reactions file.\n\nRules  \n1. Follow the DSL grammar exactly (imports, transformation block,\n   reactions, routines, guards, create/update sections, persistence\n   paths, correspondence links, etc.).  \n2. Use the transformation / reaction / routine names provided by the\n   user whenever they are specified.  \n3. If a name is missing, invent a concise, CamelCase name that matches\n   the intent.  \n4. Use as much Reactions Language as possible and use xtend only when necessary  \n5. Do **not** wrap it in Markdown fences, and do **not** add commentary,\n   explanations, or blank lines beyond what the language requires."
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1296,
        -64
      ],
      "id": "3731a8c3-468d-42ea-825d-4124658ad40c",
      "name": "(Re-)Generate code"
    },
    {
      "parameters": {
        "fileSelector": "=/data/examples/reactions/Examples.txt",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        736,
        -32
      ],
      "id": "6b7f3d8e-d0ba-47d5-a56f-386f603e3b06",
      "name": "Read few shot examples",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/data/snippets/reactions_language/responses/claude-sonnet-4/{{ $node[\"Save reaction name\"].json.baseName }}.reactions",
        "dataPropertyName": "={{$node[\"(Re-)Generate code\"].json.text}}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1632,
        320
      ],
      "id": "d4a7bf27-e248-4d03-a4cd-0e7cfb7b6755",
      "name": "Write response to disk"
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "text",
        "binaryPropertyName": "={{ $json.text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1440,
        320
      ],
      "id": "ab03a891-818a-4c4f-88b7-6ec922ef1ed3",
      "name": "Convert response to File",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 5,
        "options": {
          "includeUnpaired": true
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1120,
        -112
      ],
      "id": "f43b93f1-4f5a-4645-82f0-b94a31534a98",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "text",
        "destinationKey": "examples",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        912,
        -32
      ],
      "id": "1539d982-ebb2-47d1-b470-7d2da46b3d09",
      "name": "Extract text from examples file"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        304,
        -224
      ],
      "id": "de9b6b63-6404-4e58-9719-83528fc1a162",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "fileSelector": "/data/grammar/reactions/EBNF.txt",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        736,
        128
      ],
      "id": "926aa8fc-0cb5-4538-981b-5a92ed5a40d9",
      "name": "Read Grammar"
    },
    {
      "parameters": {
        "operation": "text",
        "destinationKey": "grammar",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        912,
        128
      ],
      "id": "c8039e7b-761a-4981-813b-add9ec00575e",
      "name": "Extract text from grammar"
    },
    {
      "parameters": {
        "fileSelector": "=/data/snippets/reactions_language/prompts/*",
        "options": {
          "dataPropertyName": "data"
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        448,
        -560
      ],
      "id": "ef9e1be2-59e4-4641-ba22-837992a22a7f",
      "name": "Read prompt files",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "destinationKey": "prompt",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        736,
        -368
      ],
      "id": "70d6bd66-e18c-40a3-b5d0-3cdd16f0db8f",
      "name": "Extract text from prompt file"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9773c101-2aba-4290-bd38-0f4618b76ca5",
              "name": "baseName",
              "value": "={{$binary.data.fileName.split('.').slice(0,-1).join('.')}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        448,
        -368
      ],
      "id": "dc58a3e7-fe97-4017-be7c-2e9b21b43752",
      "name": "Save reaction name"
    },
    {
      "parameters": {
        "fileSelector": "=/data/models/*.ecore",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        576,
        -208
      ],
      "id": "245941d3-6ed4-4c0b-ba5d-66d269257054",
      "name": "Read model files",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "destinationKey": "model",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        736,
        -208
      ],
      "id": "fe1855f0-fadc-4bda-9474-03005041f893",
      "name": "Extract text from model files"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5ae157e2-f4ea-484a-9cf4-0341022bdbd3",
              "leftValue": "={{ $json.Few_shot }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        576,
        -16
      ],
      "id": "e90ed1fa-f64a-4bdb-abb0-908b057161a1",
      "name": "Few_shot"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5ae157e2-f4ea-484a-9cf4-0341022bdbd3",
              "leftValue": "={{ $json.Grammar }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        576,
        144
      ],
      "id": "4dc18476-898f-4865-90f7-81c3112f2e09",
      "name": "Grammar"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5ae157e2-f4ea-484a-9cf4-0341022bdbd3",
              "leftValue": "={{ $json.Helper_methods }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        576,
        304
      ],
      "id": "5cf0b03b-58ba-41d0-9e0b-2716d38b787b",
      "name": "Helper_methods"
    },
    {
      "parameters": {
        "fileSelector": "/data/helper_methods/reactions/*",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        736,
        288
      ],
      "id": "39e0bc29-08fe-4ae4-a50d-8371c5cb268f",
      "name": "Read helper methods"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {
          "temperature": 0.2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1232,
        208
      ],
      "id": "9526ed91-1732-4d91-869b-af18dfbb3508",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "nUZ88X2Akoz1dXpt",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Sonnet 4"
        },
        "options": {
          "temperature": 0.2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        1232,
        368
      ],
      "id": "81686d71-9c88-4852-8dbe-90d5e79f9e6b",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "R9d6pMqZ8LzipdDW",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "model",
              "separateBy": "\n"
            },
            {
              "aggregation": "concatenate",
              "field": "model",
              "includeEmpty": "=",
              "separateBy": "\n"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1.1,
      "position": [
        912,
        -208
      ],
      "id": "819d8bdc-4114-42c9-acd3-dd87d0f1e775",
      "name": "Summarize"
    },
    {
      "parameters": {
        "operation": "text",
        "destinationKey": "helper_methods",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        912,
        288
      ],
      "id": "eb9b4fa1-9079-4501-8616-ca7a9aebbf9f",
      "name": "Extract text from helper methods"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5",
          "mode": "list",
          "cachedResultName": "gpt-5"
        },
        "options": {
          "timeout": 600000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1232,
        64
      ],
      "id": "e0dfe354-20a2-4542-a16a-213e94fd3699",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "8mtpdiKzgoTWwPSM",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9773c101-2aba-4290-bd38-0f4618b76ca5",
              "name": "Few_shot",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "0642b67c-81a4-46e1-a890-049c6102c42f",
              "name": "Grammar",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "28d72bc6-1a8c-48b8-8af2-0fd1f442dda5",
              "name": "Helper_methods",
              "value": false,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        336,
        16
      ],
      "id": "3ab0c6c7-0924-4977-84e4-24f00e15fcf2",
      "name": "Set Parameters"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Read prompt files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(Re-)Generate code": {
      "main": [
        [
          {
            "node": "Convert response to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read few shot examples": {
      "main": [
        [
          {
            "node": "Extract text from examples file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert response to File": {
      "main": [
        [
          {
            "node": "Write response to disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "(Re-)Generate code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract text from examples file": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Write response to disk": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Read model files",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract text from prompt file",
            "type": "main",
            "index": 0
          },
          {
            "node": "Save reaction name",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Grammar": {
      "main": [
        [
          {
            "node": "Extract text from grammar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract text from grammar": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Read prompt files": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract text from prompt file": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read model files": {
      "main": [
        [
          {
            "node": "Extract text from model files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract text from model files": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save reaction name": {
      "main": [
        [
          {
            "node": "Extract text from prompt file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Few_shot": {
      "main": [
        [
          {
            "node": "Read few shot examples",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Grammar": {
      "main": [
        [
          {
            "node": "Read Grammar",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Helper_methods": {
      "main": [
        [
          {
            "node": "Read helper methods",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Read helper methods": {
      "main": [
        [
          {
            "node": "Extract text from helper methods",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Extract text from helper methods": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "(Re-)Generate code",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Set Parameters": {
      "main": [
        [
          {
            "node": "Helper_methods",
            "type": "main",
            "index": 0
          },
          {
            "node": "Grammar",
            "type": "main",
            "index": 0
          },
          {
            "node": "Few_shot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "70698881-e2a0-4615-a56c-d0c506a5ad5e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "baac600b301729508052ad55e0d8a15d3b34368b7a1ed3c61d229191ca3faa41"
  },
  "id": "rYsq749gL9ApRZka",
  "tags": []
}