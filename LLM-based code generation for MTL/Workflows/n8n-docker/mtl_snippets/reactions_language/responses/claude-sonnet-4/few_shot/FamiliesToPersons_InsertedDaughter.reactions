import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons

reactions: familiesToPersons
in reaction to changes in families
execute actions in persons

reaction InsertedDaughter {
	after element families::Member inserted in families::Family[daughters]
	call createOrFindFemale(newValue, affectedEObject)
}

routine createOrFindFemale(families::Member daughter, families::Family family) {
	match {
		val personRegister = retrieve persons::PersonRegister corresponding to retrieve families::FamilyRegister corresponding to family
	}
	update {
		val female = retrieveOrCreateCorrespondingFemale(daughter, personRegister)
		updateNameAndCorrespondencesOfCorrespondingPerson(daughter, female, family)
	}
}

routine retrieveOrCreateCorrespondingFemale(families::Member daughter, persons::PersonRegister personRegister) returns persons::Female {
	match {
		val existingFemale = retrieve optional persons::Female corresponding to daughter
	}
	update {
		if (existingFemale.isPresent) {
			return existingFemale.get
		} else {
			return createFemale(daughter, personRegister)
		}
	}
}

routine createFemale(families::Member daughter, persons::PersonRegister personRegister) returns persons::Female {
	create {
		val newFemale = new persons::Female
	}
	update {
		personRegister.persons += newFemale
		addCorrespondenceBetween(daughter, newFemale)
		return newFemale
	}
}

routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member daughter, persons::Female female, families::Family family) {
	update {
		female.fullName = daughter.firstName + " " + family.lastName
		addCorrespondenceBetween(daughter, family)
	}
}