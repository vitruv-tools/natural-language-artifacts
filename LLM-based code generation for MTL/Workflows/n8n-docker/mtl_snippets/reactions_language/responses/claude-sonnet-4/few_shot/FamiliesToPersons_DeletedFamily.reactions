import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons

reactions: familiesToPersons
in reaction to changes in families
execute actions in persons

reaction DeletedFamily {
	after element families::Family deleted
	call {
		if (affectedEObject.father !== null) deletePerson(affectedEObject.father)
		if (affectedEObject.mother !== null) deletePerson(affectedEObject.mother)
		affectedEObject.daughters.forEach[deletePerson(it)]
		affectedEObject.sons.forEach[deletePerson(it)]
	}
}

routine deletePerson(families::Member member) {
	match {
		val person = retrieve persons::Person corresponding to member
		val family = retrieve families::Family corresponding to person
	}
	update {
		removeObject(person)
		removeCorrespondenceBetween(person, member)
		removeCorrespondenceBetween(person, family)
	}
}