import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons

reactions: familiesToPersons
in reaction to changes in families
execute actions in persons

reaction InsertedDaughter {
    after element families::Member inserted in families::Family[daughters]
    call createOrFindFemale(newValue, affectedEObject)
}

routine createOrFindFemale(families::Member daughter, families::Family family) {
    match {
        retrieve persons::Female corresponding to daughter
    }
    create {
        val female = new persons::Female
    }
    update {
        createFemale(daughter, family, female)
        updateNameAndCorrespondencesOfCorrespondingPerson(daughter, female)
    }
}

routine createFemale(families::Member daughter, families::Family family, persons::Female female) {
    match {
        val register = retrieve persons::PersonRegister corresponding to family.eContainer
    }
    update {
        register.persons += female
        persistProjectRelative(register, "model/persons.xmi")
        addCorrespondenceBetween(daughter, female)
    }
}

routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member daughter, persons::Female female) {
    update {
        female.fullName = daughter.firstName + " " + daughter.familyDaughter.lastName
    }
}