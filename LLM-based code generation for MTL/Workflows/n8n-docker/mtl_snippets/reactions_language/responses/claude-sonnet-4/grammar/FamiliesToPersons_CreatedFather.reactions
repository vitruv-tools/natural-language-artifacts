import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons

reactions: familiesToPersons
in reaction to changes in families
execute actions in persons

reaction CreatedFather {
	after element families::Member inserted in families::Family[father]
	call {
		updateNameAndCorrespondencesOfCorrespondingPerson(newValue)
		createMaleFromNewMember(newValue)
	}
}

routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member member) {
	match {
		val person = retrieve persons::Person corresponding to member
	}
	update {
		person.fullName = member.firstName + " " + member.familyFather.lastName
	}
}

routine createMaleFromNewMember(families::Member member) {
	match {
		require absence of persons::Person corresponding to member
	}
	call createMale(member)
}

routine createMale(families::Member member) {
	create {
		val personRegister = new persons::PersonRegister
		val male = new persons::Male
	}
	update {
		male.fullName = member.firstName + " " + member.familyFather.lastName
		personRegister.persons += male
		persistProjectRelative(personRegister, "model/persons.xmi")
		addCorrespondenceBetween(member, male)
	}
}