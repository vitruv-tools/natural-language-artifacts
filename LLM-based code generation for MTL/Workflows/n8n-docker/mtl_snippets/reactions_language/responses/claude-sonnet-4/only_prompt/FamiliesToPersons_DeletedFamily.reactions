import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons

transformation familiesToPersons for families to persons {
	reaction DeletedFamily {
		after element families::Family deleted
		call {
			if (affectedEObject.father !== null) {
				deletePerson(affectedEObject.father)
			}
			if (affectedEObject.mother !== null) {
				deletePerson(affectedEObject.mother)
			}
			for (daughter : affectedEObject.daughters) {
				deletePerson(daughter)
			}
			for (son : affectedEObject.sons) {
				deletePerson(son)
			}
		}
	}
	
	routine deletePerson(families::Member member) {
		match {
			val person = retrieve persons::Person corresponding to member
			val family = retrieve families::Family corresponding to person
		}
		update {
			removeCorrespondenceBetween(person, member)
			removeCorrespondenceBetween(person, family)
			removeObject(person)
		}
	}
}