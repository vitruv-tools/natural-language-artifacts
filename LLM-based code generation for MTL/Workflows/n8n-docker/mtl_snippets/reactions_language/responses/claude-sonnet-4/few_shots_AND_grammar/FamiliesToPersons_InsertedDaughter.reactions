import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons

reactions: familiesToPersons
in reaction to changes in families
execute actions in persons

reaction InsertedDaughter {
	after element families::Member inserted in families::Family[daughters]
	call createOrFindFemale(newValue)
}

routine createOrFindFemale(families::Member daughter) {
	match {
		val family = retrieve families::Family corresponding to daughter
		val personRegister = retrieve persons::PersonRegister corresponding to family
	}
	update {
		val correspondingFemale = retrieveCorrespondingFemale(daughter, personRegister)
		if (correspondingFemale === null) {
			createFemale(daughter, personRegister)
		} else {
			updateNameAndCorrespondencesOfCorrespondingPerson(daughter, correspondingFemale)
		}
	}
}

routine createFemale(families::Member daughter, persons::PersonRegister personRegister) {
	match {
		val family = retrieve families::Family corresponding to daughter
	}
	create {
		val newFemale = new persons::Female
	}
	update {
		personRegister.persons += newFemale
		newFemale.fullName = daughter.firstName + " " + family.lastName
		addCorrespondenceBetween(newFemale, daughter)
		addCorrespondenceBetween(newFemale, family)
	}
}

routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member daughter, persons::Female female) {
	match {
		val family = retrieve families::Family corresponding to daughter
	}
	update {
		female.fullName = daughter.firstName + " " + family.lastName
		addCorrespondenceBetween(female, daughter)
		addCorrespondenceBetween(female, family)
	}
}