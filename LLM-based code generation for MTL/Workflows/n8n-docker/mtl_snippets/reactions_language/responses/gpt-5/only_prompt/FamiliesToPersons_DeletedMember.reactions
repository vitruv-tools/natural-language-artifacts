import epackage families from "http://vitruv.tools/reactionsparser/families"
import epackage persons from "http://vitruv.tools/reactionsparser/persons"

transformation familiesToPersons {
  reactsTo families
  executesIn persons

  persistence {
    families "http://vitruv.tools/methodologisttemplate/families"
    persons "http://vitruv.tools/methodologisttemplate/persons"
  }

  reactions {
    reaction DeletedMember {
      after delete families::Member deletedMember {
        call deletePerson(deletedMember)
      }
    }
  }

  routines {
    routine deletePerson(deletedMember: families::Member) {
      val person: persons::Person? = getCorrespondingElement(deletedMember, persons::Person)
      if (person != null) {
        val family: families::Family? = getCorrespondingElement(person, families::Family)
        removeObject(person)
        removeCorrespondence(deletedMember, person)
        if (family != null) {
          removeCorrespondence(person, family)
          removeCorrespondence(deletedMember, family)
        }
      }
    }
  }
}