transformation networkToGraph {
  import metamodel network "http://vitruv.tools/methodologisttemplate/network"
  import metamodel graph "http://vitruv.tools/methodologisttemplate/graph"
  persistence {
    model network "http://vitruv.tools/methodologisttemplate/network"
    model graph "http://vitruv.tools/methodologisttemplate/graph"
  }
  reaction ComponentRenamed {
    on network::Component.name replaced
    update {
      routines.renameEntity(affectedEObject as network::Component, newValue as String)
    }
  }
  routines {
    def void renameEntity(network::Component component, String newName) {
      val graph::Entity entity = getCorrespondingElement(component, graph::Entity)
      if(entity !== null) {
        entity.name = newName
      }
    }
  }
}