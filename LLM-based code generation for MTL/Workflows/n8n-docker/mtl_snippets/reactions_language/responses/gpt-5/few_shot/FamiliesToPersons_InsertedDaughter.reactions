import "http://vitruv.tools/methodologisttemplate/persons" as persons
import "http://vitruv.tools/methodologisttemplate/families" as families
reactions: familiesToPersons
in reaction to changes in families
execute actions in persons
reaction InsertedDaughter {
	after element families::Member inserted
	guard {
		check newValue.familyDaughter !== null
	}
	call createOrFindFemale(newValue)
	call updateNameAndCorrespondencesOfCorrespondingPerson(newValue)
}
routine createOrFindFemale(families::Member daughter) {
	update {
		createFemale(daughter)
	}
}
routine createFemale(families::Member daughter) {
	match {
		val family = daughter.familyDaughter
		val familyRegister = family.eContainer as families::FamilyRegister
		val personRegister = retrieve persons::PersonRegister corresponding to familyRegister
		require absence of persons::Female corresponding to daughter
	}
	create {
		val newFemale = new persons::Female
	}
	update {
		newFemale.fullName = daughter.firstName + " " + family.lastName
		newFemale.birthday = new java.util.Date
		personRegister.persons += newFemale
		addCorrespondenceBetween(newFemale, daughter)
	}
}
routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member daughter) {
	match {
		val family = daughter.familyDaughter
		val person = retrieve persons::Female corresponding to daughter
	}
	update {
		person.fullName = daughter.firstName + " " + family.lastName
		addCorrespondenceBetween(person, daughter)
	}
}