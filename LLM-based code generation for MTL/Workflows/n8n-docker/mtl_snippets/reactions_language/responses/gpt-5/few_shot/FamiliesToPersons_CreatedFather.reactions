import "http://vitruv.tools/methodologisttemplate/persons" as persons
import "http://vitruv.tools/methodologisttemplate/families" as families
reactions: familiesToPersons
in reaction to changes in families
execute actions in persons
reaction CreatedFather {
	after element families::Member inserted
	guard {
		check newValue.familyFather !== null
	}
	call updateNameAndCorrespondencesOfCorrespondingPerson(newValue)
	call createMaleFromNewMember(newValue)
}
routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member member) {
	match {
		val family = member.familyFather
		check family !== null
		val person = retrieve persons::Person corresponding to member
	}
	update {
		person.fullName = member.firstName + " " + family.lastName
		addCorrespondenceBetween(person, family)
		addCorrespondenceBetween(person, member)
	}
}
routine createMaleFromNewMember(families::Member member) {
	match {
		val family = member.familyFather
		check family !== null
		require absence of persons::Person corresponding to member
	}
	update {
		createMale(member)
	}
}
routine createMale(families::Member member) {
	match {
		val family = member.familyFather
		check family !== null
	}
	create {
		val male = new persons::Male
	}
	update {
		male.fullName = member.firstName + " " + family.lastName
		persistProjectRelative(family, male, "model/persons.persons")
		addCorrespondenceBetween(male, member)
		addCorrespondenceBetween(male, family)
	}
}