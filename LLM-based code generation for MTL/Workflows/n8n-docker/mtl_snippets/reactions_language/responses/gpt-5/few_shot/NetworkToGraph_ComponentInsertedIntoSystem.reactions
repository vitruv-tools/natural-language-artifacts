import "http://vitruv.tools/methodologisttemplate/network" as network
import "http://vitruv.tools/methodologisttemplate/graph" as graph
reactions: networkToGraph
in reaction to changes in network
execute actions in graph
reaction ComponentInsertedIntoSystem {
	after element network::Component inserted into network::System.components
	call createAndInsertEntity(newValue, affectedEObject)
}
routine createAndInsertEntity(network::Component component, network::System system) {
	match {
		require absence of graph::Entity corresponding to component
		val root = retrieve graph::Root corresponding to system
	}
	create {
		val entity = new graph::Entity
	}
	update {
		set entity.name = component.name
		add entity to root.entities
		addCorrespondenceBetween(entity, component)
	}
}