import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons
reactions: familiesToPersons
in reaction to changes in families
execute actions in persons
reaction DeletedFamily {
  after element families::Family deleted with family
  call RemoveFamilyPersons(family)
}
routine deletePerson(families::Member member) {
  match {
    val person = retrieve persons::Person corresponding to member
  }
  update {
    if (person !== null) {
      val reg = person.eContainer as persons::PersonRegister
      if (reg !== null) {
        reg.persons.remove(person)
      }
      val fam = if (member.familyFather !== null) member.familyFather else if (member.familyMother !== null) member.familyMother else if (member.familySon !== null) member.familySon else member.familyDaughter
      removeCorrespondences(person, member)
      if (fam !== null) {
        removeCorrespondences(person, fam)
      }
    }
  }
}
routine RemoveFamilyPersons(families::Family family) {
  match {
    val fatherPerson = retrieve persons::Male corresponding to family tagged "father"
    val motherPerson = retrieve persons::Female corresponding to family tagged "mother"
    val sonPersons = retrieve many persons::Male corresponding to family tagged "son"
    val daughterPersons = retrieve many persons::Female corresponding to family tagged "daughter"
  }
  update {
    var persons::PersonRegister reg = null
    if (fatherPerson !== null) {
      reg = fatherPerson.eContainer as persons::PersonRegister
    } else if (motherPerson !== null) {
      reg = motherPerson.eContainer as persons::PersonRegister
    } else if (!sonPersons.empty) {
      reg = sonPersons.head.eContainer as persons::PersonRegister
    } else if (!daughterPersons.empty) {
      reg = daughterPersons.head.eContainer as persons::PersonRegister
    }
    if (reg !== null) {
      if (fatherPerson !== null) {
        reg.persons.remove(fatherPerson)
        removeCorrespondences(fatherPerson, family)
      }
      if (motherPerson !== null) {
        reg.persons.remove(motherPerson)
        removeCorrespondences(motherPerson, family)
      }
      for (s : sonPersons) {
        reg.persons.remove(s)
        removeCorrespondences(s, family)
      }
      for (d : daughterPersons) {
        reg.persons.remove(d)
        removeCorrespondences(d, family)
      }
    }
  }
}