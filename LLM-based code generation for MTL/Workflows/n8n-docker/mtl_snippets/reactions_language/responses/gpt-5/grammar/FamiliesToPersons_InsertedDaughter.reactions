import "http://vitruv.tools/methodologisttemplate/families" as families using qualified names
import "http://vitruv.tools/methodologisttemplate/persons" as persons using qualified names
reactions: familiesToPersons 
in reaction to changes in families 
execute actions in persons
reaction InsertedDaughter {
  after element families::Member inserted in families::Family[daughters]
  call { createOrFindFemale(element); updateNameAndCorrespondencesOfCorrespondingPerson(element) }
}
routine createOrFindFemale(families::Member daughter) {
  match {
    require absence of persons::Female corresponding to daughter
    val personRegister = retrieve asserted persons::PersonRegister corresponding to daughter.familyDaughter.eContainer
  }
  create {
    val newFemale = new persons::Female
  }
  update {
    personRegister.persons += newFemale
    newFemale.fullName = daughter.firstName + " " + daughter.familyDaughter.lastName
    newFemale.birthday = new java.util.Date()
    createCorrespondence(daughter, newFemale)
  }
}
routine createFemale(families::Member daughter) {
  match {
    require absence of persons::Female corresponding to daughter
    val personRegister = retrieve asserted persons::PersonRegister corresponding to daughter.familyDaughter.eContainer
  }
  create {
    val female = new persons::Female
  }
  update {
    personRegister.persons += female
    female.fullName = daughter.firstName + " " + daughter.familyDaughter.lastName
    female.birthday = new java.util.Date()
    createCorrespondence(daughter, female)
  }
}
routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member daughter) {
  match {
    val female = retrieve asserted persons::Female corresponding to daughter
  }
  update {
    female.fullName = daughter.firstName + " " + daughter.familyDaughter.lastName
    createCorrespondence(daughter, female)
  }
}