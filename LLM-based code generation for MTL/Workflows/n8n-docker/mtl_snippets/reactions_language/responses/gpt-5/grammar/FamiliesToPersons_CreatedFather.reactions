import "http://vitruv.tools/methodologisttemplate/families" as families using qualified names
import "http://vitruv.tools/methodologisttemplate/persons" as persons using qualified names
reactions: familiesToPersons
in reaction to changes in families
execute actions in persons
reaction CreatedFather {
  after element families::Member inserted in families::Family[father]
  call { updateNameAndCorrespondencesOfCorrespondingPerson(affectedEObject as families::Family, newValue as families::Member); createMaleFromNewMember(affectedEObject as families::Family, newValue as families::Member) }
}
routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Family family, families::Member member) {
  match {
    val person = retrieve persons::Person corresponding to member
  }
  update {
    if (person != null) {
      person.fullName = family.lastName + " " + member.firstName
      registerCorrespondence(person, member)
    }
  }
}
routine createMaleFromNewMember(families::Family family, families::Member member) {
  match {
    require absence of persons::Male corresponding to member
  }
  update { createMale(family, member) }
}
routine createMale(families::Family family, families::Member member) {
  match {
    val register = retrieve persons::PersonRegister corresponding to family.eContainer
    check asserted register != null
  }
  create {
    val male = new persons::Male
  }
  update {
    male.fullName = family.lastName + " " + member.firstName
    male.birthday = new java.util.Date()
    register.persons.add(male)
    registerCorrespondence(male, member)
  }
}