import "http://vitruv.tools/methodologisttemplate/network" as network using qualified names
import "http://vitruv.tools/methodologisttemplate/graph" as graph using qualified names
reactions: networkToGraph 
in reaction to changes in network 
execute actions in graph
reaction ComponentInsertedIntoSystem { 
  after element network::Component inserted in network::System[components] 
  call createAndInsertEntity(newValue as network::Component, affectedEObject as network::System) 
}
routine createAndInsertEntity(network::Component component, network::System system) {
  match { 
    require absence of graph::Entity corresponding to component
    val gRoot = retrieve asserted graph::Root corresponding to system 
  }
  create { 
    val entity = new graph::Entity 
  }
  update { 
    entity.name = component.name
    gRoot.entities += entity
    this.addCorrespondenceBetween(entity, component) 
  }
}