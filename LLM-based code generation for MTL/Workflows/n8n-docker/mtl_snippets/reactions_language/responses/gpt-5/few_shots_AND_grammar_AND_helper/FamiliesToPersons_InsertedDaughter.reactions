import "http://vitruv.tools/methodologisttemplate/persons" as persons
import "http://vitruv.tools/methodologisttemplate/families" as families
reactions: familiesToPersons in reaction to changes in families execute actions in persons
reaction InsertedDaughter {
	after element families::Member inserted in families::Family[daughters]
	call createOrFindFemale(newValue)
}
routine createOrFindFemale(families::Member daughter) {
	update {
		createFemale(daughter)
		updateNameAndCorrespondencesOfCorrespondingPerson(daughter)
	}
}
routine createFemale(families::Member daughter) {
	match {
		val personRegister = retrieve persons::PersonRegister corresponding to daughter.familyDaughter.eContainer
		require absence of persons::Female corresponding to daughter
	}
	create {
		val newFemale = new persons::Female
	}
	update {
		personRegister.persons += newFemale
		addCorrespondenceBetween(newFemale, daughter)
	}
}
routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member daughter) {
	match {
		val female = retrieve persons::Female corresponding to daughter
	}
	update {
		female.fullName = daughter.firstName + " " + daughter.familyDaughter.lastName
		addCorrespondenceBetween(female, daughter)
	}
}