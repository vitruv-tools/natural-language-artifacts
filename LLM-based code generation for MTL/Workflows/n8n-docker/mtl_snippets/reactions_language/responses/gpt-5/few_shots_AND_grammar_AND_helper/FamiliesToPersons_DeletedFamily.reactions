import "http://vitruv.tools/methodologisttemplate/persons" as persons
import "http://vitruv.tools/methodologisttemplate/families" as families
reactions: familiesToPersons in reaction to changes in families execute actions in persons
reaction DeletedFamily {
	after element families::Family deleted
	call deleteMembersOfFamily(affectedEObject)
}
routine deleteMembersOfFamily(families::Family family) {
	update {
		if (family.father !== null) {
			deletePerson(family.father)
		}
		if (family.mother !== null) {
			deletePerson(family.mother)
		}
		family.sons.forEach[m|deletePerson(m)]
		family.daughters.forEach[m|deletePerson(m)]
	}
}
routine deletePerson(families::Member member) {
	match {
		val person = retrieve persons::Person corresponding to member
		val family = retrieve families::Family corresponding to person
	}
	update {
		removeObject(person)
		removeCorrespondenceBetween(person, family)
		removeCorrespondenceBetween(person, member)
	}
}