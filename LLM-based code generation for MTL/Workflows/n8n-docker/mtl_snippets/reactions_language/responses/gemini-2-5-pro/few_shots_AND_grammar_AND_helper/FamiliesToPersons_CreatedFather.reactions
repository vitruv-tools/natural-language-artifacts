import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons
reactions: familiesToPersons
in reaction to changes in families
execute actions in persons
reaction CreatedFather {
	after attribute replaced at families::Family[father]
	call {
		updateNameAndCorrespondencesOfCorrespondingPerson(newValue)
		createMaleFromNewMember(newValue)
	}
}
routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member newFather) {
	match {
		val person = retrieve persons::Person corresponding to newFather
	}
	update {
		person.fullName = newFather.firstName + " " + newFather.familyFather.lastName
	}
}
routine createMaleFromNewMember(families::Member newMember) {
	match {
		require absence of persons::Male corresponding to newMember
	}
	update {
		createMale(newMember)
	}
}
routine createMale(families::Member member) {
	match {
		val family = member.familyFather
		val familyRegister = family.eContainer as families::FamilyRegister
		val personRegister = retrieve persons::PersonRegister corresponding to familyRegister
	}
	create {
		val newMale = new persons::Male
	}
	update {
		newMale.fullName = member.firstName + " " + family.lastName
		personRegister.persons.add(newMale)
		addCorrespondenceBetween(member, newMale)
	}
}