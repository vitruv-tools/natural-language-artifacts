import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons

transformation familiesToPersons
	in reaction to changes in families
	execute actions in persons

reaction DeletedFamily {
	after element families::Family deleted
	if (affectedEObject.father !== null) {
		call deletePerson(affectedEObject.father)
	}
	if (affectedEObject.mother !== null) {
		call deletePerson(affectedEObject.mother)
	}
	for (son : affectedEObject.sons) {
		call deletePerson(son)
	}
	for (daughter : affectedEObject.daughters) {
		call deletePerson(daughter)
	}
}

routine deletePerson(families::Member member) {
	match {
		val person = retrieve persons::Person corresponding to member
		val family = retrieve families::Family corresponding to person
	}
	update {
		removeObject(person)
		removeCorrespondenceBetween(person, member)
		removeCorrespondenceBetween(person, family)
	}
}