import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons

reactions: familiesToPersons
in reaction to changes in families
execute actions in persons

reaction InsertedDaughter {
	after element families::Member inserted in families::Family[daughters]
	call createOrFindFemale(newValue)
	call updateNameAndCorrespondencesOfCorrespondingPerson(newValue)
}

routine createOrFindFemale(families::Member daughter) {
	match {
		require absence of persons::Female corresponding to daughter
	}
	call createFemale(daughter)
}

routine createFemale(families::Member daughter) {
	match {
		val family = daughter.familyDaughter
		val familyRegister = family.eContainer as families::FamilyRegister
		val personRegister = retrieve persons::PersonRegister corresponding to familyRegister
	}
	create {
		val newFemale = new persons::Female
	}
	update {
		personRegister.persons.add(newFemale)
		addCorrespondenceBetween(newFemale, daughter)
	}
}

routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member daughter) {
	match {
		val correspondingPerson = retrieve persons::Female corresponding to daughter
		val family = daughter.familyDaughter
	}
	update {
		correspondingPerson.fullName = daughter.firstName + " " + family.lastName
		addCorrespondenceBetween(correspondingPerson, family)
	}
}