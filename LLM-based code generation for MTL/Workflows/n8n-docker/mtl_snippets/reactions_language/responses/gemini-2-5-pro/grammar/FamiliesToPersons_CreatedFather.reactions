import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons
reactions: familiesToPersons 
in reaction to changes in families 
execute actions in persons {
	reaction CreatedFather {
		after element families::Member inserted in families::Family[father] with newFather
		call updateNameAndCorrespondencesOfCorrespondingPerson(newFather)
		call createMaleFromNewMember(newFather)
	}
	routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member member) {
		match {
			val person = retrieve persons::Person corresponding to member
		}
		update {
			person.fullName = member.firstName + " " + member.familyFather.lastName
		}
	}
	routine createMaleFromNewMember(families::Member member) {
		match {
			require absence of persons::Person corresponding to member
		}
		update {
			call createMale(member)
		}
	}
	routine createMale(families::Member member) {
		match {
			val familyRegister = member.familyFather.eContainer as families::FamilyRegister
			val personRegister = retrieve persons::PersonRegister corresponding to familyRegister
		}
		create {
			val male = new persons::Male
		}
		update {
			male.fullName = member.firstName + " " + member.familyFather.lastName
			personRegister.persons.add(male)
			correspondence between male and member
		}
	}
}