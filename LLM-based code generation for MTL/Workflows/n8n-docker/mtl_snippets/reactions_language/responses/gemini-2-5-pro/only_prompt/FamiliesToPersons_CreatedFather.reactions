import families "http://vitruv.tools/methodologisttemplate/families"
import persons "http://vitruv.tools/methodologisttemplate/persons"

transformation familiesToPersons for families to persons

reaction CreatedFather {
    triggers {
        update Family.father -> set(Member newValue)
    }
    body(Family family, Member newValue) {
        call updateNameAndCorrespondencesOfCorrespondingPerson(family, newValue)
        call createMaleFromNewMember(family, newValue)
    }
}

routine updateNameAndCorrespondencesOfCorrespondingPerson(Family family, Member father) {
    guard exists Male correspondingMale requires correspondence to father
    update correspondingMale {
        fullName = father.firstName + " " + family.lastName
    }
    correspondence family -> correspondingMale
}

routine createMaleFromNewMember(Family family, Member father) {
    guard not exists Male correspondingMale requires correspondence to father
    call createMale(family, father)
}

routine createMale(Family family, Member father) {
    create Male newMale
    update PersonRegister register
    update newMale {
        fullName = father.firstName + " " + family.lastName
    }
    update register {
        persons += newMale
    }
    correspondence father -> newMale
}