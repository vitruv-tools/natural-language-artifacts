import "http://vitruv.tools/methodologisttemplate/families" as families
import "http://vitruv.tools/methodologisttemplate/persons" as persons

reactions: familiesToPersons
in reaction to changes in families
execute actions in persons

reaction InsertedDaughter {
	after element families::Member inserted in families::Family[daughters]
    with newValue !== null
	call {
		createOrFindFemale(newValue, affectedEObject)
		updateNameAndCorrespondencesOfCorrespondingPerson(newValue, affectedEObject)
	}
}

routine createOrFindFemale(families::Member newMember, families::Family family) {
	match {
		require absence of persons::Female corresponding to newMember
	}
	update {
		createFemale(newMember, family)
	}
}

routine createFemale(families::Member newMember, families::Family family) {
	match {
		val personsRegister = retrieve persons::PersonRegister corresponding to family.eContainer
	}
	create {
		val person = new persons::Female
	}
	update {
		person.fullName = newMember.firstName + " " + family.lastName
		personsRegister.persons.add(person)
		addCorrespondenceBetween(newMember, person)
		addCorrespondenceBetween(family, person)
	}
}

routine updateNameAndCorrespondencesOfCorrespondingPerson(families::Member newMember, families::Family newFamily) {
	match {
		val correspondingPerson = retrieve persons::Person corresponding to newMember
	}
	update {
		person.fullName = newMember.firstName + " " + newFamily.lastName
		addCorrespondenceBetween(correspondingPerson, newFamily)
	}
}


