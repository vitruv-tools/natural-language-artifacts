module FamiliesToPersons_All;
create OUT: persons from IN: families;

helper context families::Member def: familyLastName(): String =
	if not self.familyFather.oclIsUndefined() then
		self.familyFather.lastName
	else if not self.familyMother.oclIsUndefined() then
		self.familyMother.lastName
	else if not self.familySon.oclIsUndefined() then
		self.familySon.lastName
	else if not self.familyDaughter.oclIsUndefined() then
		self.familyDaughter.lastName
	else
		''
	endif endif endif endif;

helper context families::Member def: isFemale(): Boolean =
	not self.familyMother.oclIsUndefined() or not self.familyDaughter.oclIsUndefined();

helper context families::Member def: isMale(): Boolean =
	not self.familyFather.oclIsUndefined() or not self.familySon.oclIsUndefined();

rule Member2Male {
	from
		m: families::Member (m.isMale())
	to
		male: persons::Male (
			fullName <- m.firstName + ' ' + m.familyLastName()
		)
}

rule Member2Female {
	from
		m: families::Member (m.isFemale())
	to
		female: persons::Female (
			fullName <- m.firstName + ' ' + m.familyLastName()
		)
}