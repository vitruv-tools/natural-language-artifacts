-- @nsURI Families=http://vitruv.tools/methodologisttemplate/families
-- @nsURI Persons=http://vitruv.tools/methodologisttemplate/persons
module FamiliesToPersons_All;
create OUT : Persons from IN : Families;

helper context Families!Member def: familyLastName() : String =
  if not self.familyFather.oclIsUndefined() then
    self.familyFather.lastName
  else
    if not self.familyMother.oclIsUndefined() then
      self.familyMother.lastName
    else
      if not self.familySon.oclIsUndefined() then
        self.familySon.lastName
      else
        if not self.familyDaughter.oclIsUndefined() then
          self.familyDaughter.lastName
        else
          ''
        endif
      endif
    endif
  endif;

helper context Families!Member def: isMale() : Boolean =
  (not self.familyFather.oclIsUndefined()) or (not self.familySon.oclIsUndefined());

helper context Families!Member def: isFemale() : Boolean =
  (not self.familyMother.oclIsUndefined()) or (not self.familyDaughter.oclIsUndefined());

rule Member2Male {
  from
    m : Families!Member (m.isMale())
  to
    out : Persons!Male (
      fullName <- m.firstName.concat(' ').concat(m.familyLastName())
    )
}

rule Member2Female {
  from
    m : Families!Member (m.isFemale())
  to
    out : Persons!Female (
      fullName <- m.firstName.concat(' ').concat(m.familyLastName())
    )
}